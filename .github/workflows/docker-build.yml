name: build-and-push-docker

on:
  push:
    branches:
      - "master"

jobs:
  check_for_poetry_updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry==1.7.1

      - name: Update dependencies
        run: poetry update --only main --lock && poetry export --without-hashes --format=requirements.txt > requirements.txt

      - name: Check for changes
        id: changes
        run: echo "changed=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Publish changes
        if: steps.changes.outputs.changed > 0
        uses: test-room-7/action-update-file@v1.8.0
        with:
          file-path: |
              poetry.lock
              requirements.txt
          commit-msg: Update poetry dependencies
          github-token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "bloxlink/bot-api"
      - name: Build and push Bot API
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: "bloxlink/bot-api:latest"
          file: ./bot-api.Dockerfile
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
      - name: Build and push Relay Server
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: "bloxlink/relay-server:latest"
          file: ./relay-server.Dockerfile
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
